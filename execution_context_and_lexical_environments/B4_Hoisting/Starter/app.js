/* 
  Hoisting - всплытие.
  Данной особенностью обладают функции, которые созданы с помощью ключевого слова "function".
  А также переменные "var".
  !var = не выдаст фактически присвоенное значение, вместо этого значением будет undefined, но и ошибки не будет

  Всплытие означает, что наши переменные, после создания буквально всплывают вверх кода и
  можем их вызвать до того, как фактически создали.
*/

b();
console.log(a);

var a = 'Hello World!';

function b() {
  console.log("Called b fn");
}

/* 
  *Executing Environment создаётся в два этапа:
    - Фаза создания, перед выполнением кода, парсер просматривает код, подготавливает его к исполнению,
      выделяет место в памяти для создания переменных и функций, тоесть фактически он знает какие переменные созданы
      до исполнения кода.
      !Важно. При работе с функциями парсер заранее знает, что находиться в теле функции.
      !Но при работе с переменными, он просто резервирует за ними имя, так как в коде значение этой
      !переменной может переприсвоиться. Фактическое значение будет известно, когда парсер пройдет код
      !строка за строкой - тоесть на этапе исполнения кода.
      
    - Вторая фаза(этап) - этап исполнения.
      Строка за строкой, интерпритируется, преобразовывается, компилируется.
*/